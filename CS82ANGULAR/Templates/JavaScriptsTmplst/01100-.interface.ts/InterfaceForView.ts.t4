<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="ts" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="CS82ANGULAR" #>
<#@ import namespace="CS82ANGULAR.Model" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable.Angular" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.DbContextSerializable" name="Context" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.Angular.AngularJson" name="AngularJsonFile" #>
<#@ include file="..\..\CommonScripts\ViewLevel.t4" #>

export interface <#= GetInterfaceName(Model) #> {
<#  
    if (Model.ScalarProperties != null) {
        foreach (ModelViewPropertyOfVwSerializable prop in Model.ScalarProperties) { 
            if(IsFileUpload(prop, Model) && string.IsNullOrEmpty(prop.ForeignKeyName)) {
#>
      <#=  GetTypeScriptPropertyName(prop, Model) #>: <#= GetPropertyTypeScriptTypeNameEx(prop) #>|FileList|null;  // FileUpload:  <#= GetPropertyTypeName(prop) #>
<#
            } else {
#>
      <#=  GetTypeScriptPropertyName(prop, Model) #>: <#= GetPropertyTypeScriptTypeNameEx(prop) #>|null;  // <#= GetPropertyTypeName(prop) #>
<#
            }
        }
    }
#>
}


