<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="html" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="CS82ANGULAR" #>
<#@ import namespace="CS82ANGULAR.Model" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.DbContextSerializable" name="Context" #>

<#
    bool localize = Context.Localize;


    string pagenotfoundComponentFolder        = "00185-app-glbl-pagenotfound.component.ts";
    string pagenotfoundComponentClassName = GetComponentClassName(Model, pagenotfoundComponentFolder);

#>


<div class="pagenotfound-container">
    <div class="pagenotfound-item-container" fxLayout="column" fxLayoutAlign="center space-between">
        <h1 fxLayout="row" fxLayoutAlign="center"> 
            <button mat-fab color="warn" >
              <mat-icon>error</mat-icon>
            </button>
        </h1>
<# 
    if(localize) {
#>
        <h1 fxLayout="row" fxLayoutAlign="center" i18n="404 Page Not Found@@<#= pagenotfoundComponentClassName#>.404-Page-Not-Found"> 404 Page Not Found </h1>
<# 
    } else {
#>
        <h1 fxLayout="row" fxLayoutAlign="center"> 404 Page Not Found </h1>
<# 
    }
#>

        <router-outlet></router-outlet>
    </div>
</div>


<#+

    string GetComponentClassName(ModelViewSerializable model, string fileType) {
        string result="";
        if ((model == null) || string.IsNullOrEmpty(fileType) ) {
            return result;
        }
        if (model.CommonStaffs == null) {
            return result;
        }
        CommonStaffSerializable refItem= 
            model.CommonStaffs.Where(c => c.FileType == fileType).FirstOrDefault();
        if (refItem == null) {
            return result;
        }
        if(string.IsNullOrEmpty(refItem.FileName)) {
            return result;
        }
        string fn = refItem.FileName.Replace(".component","Component");
        StringBuilder sb = new StringBuilder();
        bool toUpper = true;
        foreach (char c in fn)
        {
            if( c == '-' )
            {
                toUpper = true;
            } else
            {
                if (toUpper)
                {
                    sb.Append(Char.ToUpper(c));
                    toUpper = false;
                }
                else
                {
                    sb.Append(c);
                }
            }
        }
        return sb.ToString();
    }

#>

