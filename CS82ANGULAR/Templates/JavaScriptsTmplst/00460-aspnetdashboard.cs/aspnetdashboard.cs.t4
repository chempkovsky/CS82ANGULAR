<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="CS82ANGULAR" #>
<#@ import namespace="CS82ANGULAR.Model" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.DbContextSerializable" name="Context" #>
<#@ parameter type="System.String" name="DefaultProjectNameSpace" #>

<#

    string aspnetdashboardFolder        = "00460-aspnetdashboard.cs";

#>

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace <#= GetNameSpaceName(Model, aspnetdashboardFolder, DefaultProjectNameSpace) #>
{
    public class <#= GetEntityClassName(Model, aspnetdashboardFolder) #>
    {
        [Required]
        [Display(Description = "Dashboard Id", Name = "Dashboard Id", Prompt = "Enter Dashboard Id", ShortName = "Id")]
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        public int DashboardPk { get; set; }

        [Required]
        [Display(Description = "Dashboard Name", Name = "Dashboard Name", Prompt = "Enter DashboardName", ShortName = "Name")]
        [StringLength(50, MinimumLength = 1, ErrorMessage = "Invalid")]
        public string DashboardName { get; set; } = null!;

        [Display(Description = "Dashboard Description", Name = "Dashboard Description", Prompt = "Enter DashboardDescription", ShortName = "Description")]
        [StringLength(50, MinimumLength = 1, ErrorMessage = "Invalid")]
        public string DashboardDescription { get; set; } = null!;

    }
}

<#+
    string GetEntityClassName(ModelViewSerializable model, string fileType) {
        string result="";
        if ((model == null) || string.IsNullOrEmpty(fileType) ) {
            return result;
        }
        if (model.CommonStaffs == null) {
            return result;
        }
        CommonStaffSerializable refItem= 
            model.CommonStaffs.Where(c => c.FileType == fileType).FirstOrDefault();
        if (refItem == null) {
            return result;
        }
        if(string.IsNullOrEmpty(refItem.FileName)) {
            return result;
        }
        return refItem.FileName;
    }
    string GetNameSpaceName(ModelViewSerializable model, string currFolder, string  DefaultProjectNameSpace) {
        string result="";
        if ((model == null) || string.IsNullOrEmpty(currFolder)) {
            return result;
        }
        if (model.CommonStaffs == null) {
            return result;
        }
        CommonStaffSerializable curItem= 
            model.CommonStaffs.Where(c => c.FileType == currFolder).FirstOrDefault();
        if (curItem == null) {
            return result;
        }
        result = curItem.FileFolder.Replace("\\",".");
        if(string.IsNullOrEmpty(DefaultProjectNameSpace)) {
            return result;
        } 
        return DefaultProjectNameSpace + "." + result;
    }


#>