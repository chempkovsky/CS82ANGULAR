<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="ts" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="CS82ANGULAR" #>
<#@ import namespace="CS82ANGULAR.Model" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.DbContextSerializable" name="Context" #>
<#@ include file="..\..\CommonScripts\ViewLevel.t4" #>
<#

    string viewInterfaceFolder          = "01100-.interface.ts";
    string sformComponentFolder         = "01420-Sform.component.ts";
    string viewInterfaceDlgFolder       = "01430-Dlg.interface.ts";
    string sdlgCssFolder                = "01440-Sdlg.component.css";
    string sdlgHtmlFolder               = "01440-Sdlg.component.html";
    string sdlgComponentFolder          = "01440-Sdlg.component.ts";

    string showMultiSelectedRowSelector   = "show-multi-selected-row";
    string showMultiSelectedRowPropName   = "showMultiSelectedRow";

    string componentSelectorCommonPart = GetComponentSelectorCommonPart(Model, sdlgComponentFolder);

#>

import { Component,  Input, Output, EventEmitter, ViewChild, Inject } from '@angular/core';
import { DialogRef, DialogContentBase } from "@progress/kendo-angular-dialog";

import { <#= GetInterfaceDlgName(Model) #> } from '<#= GetFolderName(Model, viewInterfaceDlgFolder, sdlgComponentFolder)#>';
import { <#= GetInterfaceName(Model) #> } from '<#=  GetFolderName(Model, viewInterfaceFolder, sdlgComponentFolder) #>';

@Component({
  selector: 'app-<#= componentSelectorCommonPart #>',
  templateUrl: '<#= GetFolderName(Model, sdlgHtmlFolder, sdlgComponentFolder)#>.html',
  styleUrls: ['<#= GetFolderName(Model, sdlgCssFolder, sdlgComponentFolder)#>.css']
})

export class <#= GetComponentClassName(Model, sdlgComponentFolder) #> extends DialogContentBase { 
    @Input('data')
    data: <#= GetInterfaceDlgName(Model) #>|any;
    constructor(public dialogRef: DialogRef) { 
        super(dialogRef);
    }
    currentRow: <#= GetInterfaceName(Model) #> |null = null;
    <#= showMultiSelectedRowPropName #>: boolean = false;
    onSelectedRow(row:  <#= GetInterfaceName(Model) #> | null) {
        this.currentRow = row;
    }
    onCancel() {
        this.dialogRef.close(null);
    }
    onOk() {
        if(typeof this.currentRow == 'undefined') return;
        if(this.currentRow == null) return;
        this.data.selectedItems =  [this.currentRow];
        this.dialogRef.close(this.data);
    }
}


