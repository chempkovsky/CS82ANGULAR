<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="ts" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="CS82ANGULAR" #>
<#@ import namespace="CS82ANGULAR.Model" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.DbContextSerializable" name="Context" #>
<#@ include file="..\..\CommonScripts\ViewLevel.t4" #>
<#
    bool localize = Context.Localize;

    string FormControlNewModelPropName  = "eformNewControlModel";
    string OnAfterSubmitMethodName      = "onAfterSubmit";

    string viewInterfaceFolder          = "01100-.interface.ts";

    string addformComponentFolder       = "01502-Aform.component.ts";
    string adddlgCssFolder              = "01522-Adlg.component.css";
    string adddlgHtmlFolder             = "01522-Adlg.component.html";
    string adddlgComponentFolder        = "01522-Adlg.component.ts";

    string viewInterfaceADlgFolder      = "01512-Adlg.interface.ts";

    string componentSelectorCommonPart = GetComponentSelectorCommonPart(Model, adddlgComponentFolder);
    string componentClassName = GetComponentClassName(Model, adddlgComponentFolder);

#>

import { Component,  Input, Output, EventEmitter, ViewChild, Inject } from '@angular/core';
import {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';
import { <#= GetInterfaceADlgName(Model) #> } from '<#= GetFolderName(Model, viewInterfaceADlgFolder, adddlgComponentFolder)#>';
import { <#= GetComponentClassName(Model, addformComponentFolder) #> } from '<#=  GetFolderName(Model, addformComponentFolder, adddlgComponentFolder) #>';
import { <#= GetInterfaceName(Model) #> } from '<#= GetFolderName(Model, viewInterfaceFolder, adddlgComponentFolder)#>';

@Component({
  selector: 'app-<#= componentSelectorCommonPart #>',
  templateUrl: '<#= GetFolderName(Model, adddlgHtmlFolder, adddlgComponentFolder) #>.html',
  styleUrls: ['<#= GetFolderName(Model, adddlgCssFolder, adddlgComponentFolder) #>.css']
})
export class <#= componentClassName #>  {
    @ViewChild(<#= GetComponentClassName(Model, addformComponentFolder) #>) childForm: <#= GetComponentClassName(Model, addformComponentFolder) #>|any;
    constructor(public dialogRef: MatDialogRef<<#= componentClassName #>>, @Inject(MAT_DIALOG_DATA) public data: <#= GetInterfaceADlgName(Model) #> ) { }
    <#= OnAfterSubmitMethodName #>(newVal: <#= GetInterfaceName(Model) #>) {
        this.data.<#= FormControlNewModelPropName #> = newVal; 
        this.dialogRef.close(this.data);
    }
    onCancel() {
        this.dialogRef.close(null);
    }
    onOk() {
        if (typeof this.childForm === 'undefined') return;
        if (this.childForm === null) return;
        this.childForm.doSubmit();
    }
}

