<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="ts" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="CS82ANGULAR" #>
<#@ import namespace="CS82ANGULAR.Model" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable.Angular" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.DbContextSerializable" name="Context" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.Angular.AngularJson" name="AngularJsonFile" #>
<#@ include file="..\..\CommonScripts\ViewLevel.t4" #>
<#
    string ldlgCssFolder                = "01620-Ldlg.component.css";
    string ldlgHtmlFolder               = "01620-Ldlg.component.html";
    string ldlgComponentFolder          = "01620-Ldlg.component.ts";
    string componentSelectorCommonPart  = GetComponentSelectorCommonPart(Model, ldlgComponentFolder);
    string componentClassName           = GetComponentClassName(Model, ldlgComponentFolder);

    string viewInterfaceFolder          = "01100-.interface.ts";
    string viewInterfaceName            = GetInterfaceNameWithAnglr(AngularJsonFile, Model, viewInterfaceFolder, ldlgComponentFolder);

    string viewInterfaceDlgFolder       = "01430-Dlg.interface.ts";
    string viewInterfaceDlgClassName    = GetInterfaceDlgNameWithAnglr(AngularJsonFile, Model, viewInterfaceDlgFolder, ldlgComponentFolder);
#>

import { Component,  Input, Output, EventEmitter, ViewChild, Inject } from '@angular/core';
import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';

import { <#= viewInterfaceName #> } from '<#=  GetFolderNameWithAnglr(AngularJsonFile, Model, viewInterfaceFolder, ldlgComponentFolder) #>';
import { <#= viewInterfaceDlgClassName #> } from '<#= GetFolderNameWithAnglr(AngularJsonFile, Model, viewInterfaceDlgFolder, ldlgComponentFolder) #>';

/* eslint-disable @angular-eslint/no-output-on-prefix */
/* eslint-disable @angular-eslint/no-output-rename */
/* eslint-disable @angular-eslint/no-input-rename */

@Component({
<# if (Model.IsStandalone) { #>
  standalone: true,
<# } else { #>
  standalone: false,
<# } #>

  selector: 'app-<#= componentSelectorCommonPart #>',
  templateUrl: '<#= GetFolderName(Model, ldlgHtmlFolder, ldlgComponentFolder)#>.html',
  styleUrls: ['<#= GetFolderName(Model, ldlgCssFolder, ldlgComponentFolder)#>.scss']
})
export class <#= componentClassName #> { 
    @Input('data')
    public data: <#= viewInterfaceDlgClassName #> | any;
    constructor(public dialogRef: NgbActiveModal) { }
    // constructor(public dialogRef: MatDialogRef<<#= componentClassName #>>, @Inject(MAT_DIALOG_DATA) public data: <#= viewInterfaceDlgClassName #> ) { }
    currentRow: <#= viewInterfaceName #> |null = null;
    onSelectedRow(row:  <#= viewInterfaceName #> | null) {
        this.currentRow = row;
    }
    onCancel() {
        this.dialogRef.dismiss();
    }

    onOk() {
        if(typeof this.currentRow == 'undefined') return;
        if(this.currentRow == null) return;
        this.data.selectedItems =  [this.currentRow];
        this.dialogRef.close(this.data);
    }
}


