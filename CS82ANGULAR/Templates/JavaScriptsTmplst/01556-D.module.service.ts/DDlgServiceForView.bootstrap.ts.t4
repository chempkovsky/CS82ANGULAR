<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="ts" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="CS82ANGULAR" #>
<#@ import namespace="CS82ANGULAR.Model" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable.Angular" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.DbContextSerializable" name="Context" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.Angular.AngularJson" name="AngularJsonFile" #>
<#@ include file="..\..\CommonScripts\ViewLevel.t4" #>
<#

    string delModuleServiceFolder               = "01556-D.module.service.ts";
    string delModuleServiceClassName            = GetModuleServiceClassName(Model, delModuleServiceFolder);

    string delModuleFolder                      = "01556-D.module.ts";
    string delModuleClassName                   = GetModuleClassNameWithAnglr(AngularJsonFile, Model, delModuleFolder, delModuleServiceFolder);

    string appSettingServiceFolder              = "00015-app-glbl-settings.service.ts";
    string appSettingServiceClassName           = GetCommonServiceClassNameWithAnglr(AngularJsonFile, Model, Context, appSettingServiceFolder, delModuleServiceFolder);


    string delComponentFolder                   = "01526-Ddlg.component.ts";
    string delDlgComponentClassName             = GetComponentClassNameWithAnglr(AngularJsonFile, Model, delComponentFolder, delModuleServiceFolder);
    string GetMethodPrefix                      = "get";
    string AppSettingServicePropName            = "appGlblSettings";

    string delInterfaceDlgFolder                = "01516-Ddlg.interface.ts";
    string delInterfaceDlgClassName             = GetInterfaceDlgNameWithAnglr(AngularJsonFile, Model, delInterfaceDlgFolder, delModuleServiceFolder);

#>

import { Injectable } from '@angular/core';
import { NgbModal } from '@ng-bootstrap/ng-bootstrap';
import { <#= appSettingServiceClassName #> } from '<#=  GetCommonFolderNameWithAnglr(AngularJsonFile, Model, Context,  appSettingServiceFolder, delModuleServiceFolder)#>';
import { <#= delInterfaceDlgClassName #> } from '<#= GetFolderNameWithAnglr(AngularJsonFile, Model, delInterfaceDlgFolder, delModuleServiceFolder)#>';

@Injectable({
  providedIn: 'root',
})
export class <#= delModuleServiceClassName #> {
  constructor(private dialog: NgbModal, protected <#= AppSettingServicePropName #>: <#= appSettingServiceClassName #>) {}
  async open(data: <#= delInterfaceDlgClassName #>): Promise<any> {
    let w: string = this.<#= AppSettingServicePropName #>.getDialogWidth('<#= Model.ViewName #>');
    const  <#= delModuleClassName #> = (await import('<#= GetFolderNameWithAnglr(AngularJsonFile, Model, delModuleFolder, delModuleServiceFolder) #>')).<#= delModuleClassName #>;
    let dialogRef = this.dialog.open(<#= delModuleClassName #>.<#= GetMethodPrefix #><#=  delDlgComponentClassName #>(), {size: w}); 
    dialogRef.componentInstance.data = data;
    return dialogRef.result;
  }  
}

