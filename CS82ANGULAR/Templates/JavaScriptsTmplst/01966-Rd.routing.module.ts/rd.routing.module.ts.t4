<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="ts" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="CS82ANGULAR" #>
<#@ import namespace="CS82ANGULAR.Model" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.DbContextSerializable" name="Context" #>
<#@ include file="..\..\CommonScripts\ViewLevel.t4" #>
<#
    string appSettingServiceFolder                  = "00015-app-glbl-settings.service.ts";
    string rdComponentFolder                        = "01826-RD.component.ts";
    string rdComponentLazyRoutingModuleFolder       = "01966-Rd.routing.module.ts";

    string rdComponentClassName                     = GetComponentClassName(Model, rdComponentFolder);
    string rdComponentLazyRoutingModuleClassName    = GetModuleClassName(Model, rdComponentLazyRoutingModuleFolder);
    string appSettingServiceClassName               = GetCommonServiceClassName(Context, appSettingServiceFolder);
#>



import { NgModule } from '@angular/core';
import { Routes, RouterModule } from '@angular/router';

import { <#= rdComponentClassName #> } from '<#= GetFolderName(Model, rdComponentFolder, rdComponentLazyRoutingModuleFolder) #>';
import { <#= appSettingServiceClassName + "Activator" #> } from '<#= GetCommonFolderName(Model, Context,  appSettingServiceFolder, rdComponentLazyRoutingModuleFolder)#>';


const routes: Routes = [
 {
    path: '',
    component: <#= rdComponentClassName #>,
    canActivate: [<#= appSettingServiceClassName + "Activator" #>]
  }
];

@NgModule({
  imports: [RouterModule.forChild(routes)],
  exports: [RouterModule]
})
export class <#= rdComponentLazyRoutingModuleClassName #> { }


