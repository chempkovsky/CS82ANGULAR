<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="html" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="CS82ANGULAR" #>
<#@ import namespace="CS82ANGULAR.Model" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.DbContextSerializable" name="Context" #>
<#
    string AppearancePropName           = "appearance";
    string MaxHeightPropSelector        = "max-height";
    string MaxHeightPropName            = "maxHeight";
    string OverflowSelector             = "ovrflw";
    string OverflowPropName             = "ovrflw";
    string containerMenuItemsPropName           = "contMenuItems";
    string onContainerMenuItemClickMethodName   = "onContMenuItemClicked";
    string showAddFltItemSelector       = "show-add-flt-item";
    string showAddFltItemPropName       = "showAddFltItem";

    string OnBackBtnMethodName          = "onBackBtnMd";
    string OnBackBtnPropName            = "onBackBtn";
    string showBackBtnPropName          = "showBackBtn";
    string showBackBtnSelector          = "show-back-btn";
    string captionPropName              = "caption";
    string captionSelector              = "caption";

#>

  <div>
    <div class="row">
        <div class="col text-center">
          <label>{{<#= captionPropName #>}}</label>
        </div>
        <div class="col text-right">
          <span></span>
          <i class="material-icons text-primary mr-5" type="button" data-toggle="tooltip" matTooltip="Navigate back to master"
            (click)="<#= OnBackBtnMethodName #>()" *ngIf="<#= showBackBtnPropName #>">arrow_back</i>
            
          <span></span>
          <i class="material-icons text-primary ml-1" type="button" data-toggle="tooltip" title="Add filter item "
            (click)="addFilter()" *ngIf="showFilter && <#= showAddFltItemPropName #>">filter_9_plus</i>
            <span></span>
            <i class="material-icons text-danger ml-1 " type="button" data-toggle="tooltip" title="Remove all filter items"
            (click)="removeAllFilters()" *ngIf="showFilter && <#= showAddFltItemPropName #>">filter_none</i>
          <i class="material-icons text-primary ml-1 mr-3" type="button" data-toggle="tooltip" title="Apply filter"
            (click)="onApplyFilterClicked()" >refresh</i>
            <span></span>
            <ng-template ngFor let-item [ngForOf]="<#= containerMenuItemsPropName #>">
                <i class="{{'material-icons ml-1 text-'+ item.iconColor}}" type="button" data-toggle="tooltip" title="{{item.caption}}"
                (click)="onContMenuItemClicked(item)">{{item.iconName}}</i>
                <span></span>
          </ng-template>

        </div>
    </div>

    <div *ngIf="showFilter" style="padding-right:18px;padding-left:5px;" [style.maxHeight.em]="<#= MaxHeightPropName #>X" [style.overflow-y]="<#= OverflowPropName #>">
        <div 
            fxLayout
            fxLayout.xs="column"
            fxLayoutAlign="left"
            fxLayoutGap="1px"
            fxLayoutGap.xs="0px" *ngFor="let flt of webServiceFilters;" >
            <span fxFlex="39%" fxFlex.xs="99%">
                <span fxFlex="1%"></span>        
                <div class="form-group"  fxFlex="99%">
                    <small >Column name</small>
                    <select class="form-control form-control" [formControl]="flt.fltrName" (change)="onSelectionChanged($event.target, flt)">
                        <option *ngFor="let fltDef of webServiceFilterDefs;" [value]="fltDef.fltrName">{{fltDef.fltrCaption}}</option>
                    </select>
                </div>
            </span>
            <div fxFlex="59%" fxFlex.xs="99%" fxLayout="row">
                <span fxFlex="1%"></span>
                <div class="form-group"  fxFlex="20%">
                    <small >Operator</small>
                    <select class="form-control form-control" [formControl]="flt.fltrOperator">
                        <option *ngFor="let oprtr of webServiceOperators;" [value]="oprtr.oName">{{oprtr.oCaption}}</option>
                    </select>
                </div>
                <span fxFlex="1%"></span>
                <div class="form-group" *ngIf="flt.fltrDataType !== 'datetime'"  fxFlex="72%">
                    <small>Filter value</small>
                    <div class="input-group" >
                        <input  class="form-control form-control" placeholder="Placeholder" [formControl]="flt.fltrValue" [maxlength]="flt.fltrMaxLen">
                        <div class="input-group-append">
                            <button class="btn btn-outline-secondary " type="button"   (click)="removeFltr(flt)" data-toggle="tooltip" title="Remove current filter item">
                                <i class="material-icons md-18 text-danger" >delete_forever</i>
                            </button>
                        </div>
                    </div>
                    <small class="text-danger" *ngIf="flt.fltrValue.invalid">{{getErrorMessage(flt.fltrValue)}}</small>
                    <small class="text-muted" *ngIf="flt.fltrMaxLen">{{flt.fltrValue.value?.length || 0}}/{{flt.fltrMaxLen}}</small>
                </div>
                <div class="form-group" *ngIf="flt.fltrDataType === 'datetime'"  fxFlex="72%">
                    <small>Filter value</small>
                    <div class="input-group" >
                        <input class="form-control form-control" ngbDatepicker #d="ngbDatepicker" container="body"
                        (click)="d.toggle()" [formControl]="flt.fltrValue" [min]="flt.fltrMin" [max]="flt.fltrMax">
                        <div class="input-group-append" >
                            <button class="btn btn-outline-secondary " type="button"   (click)="d.toggle()" data-toggle="tooltip" title="Show date dialog">
                                <i class="material-icons md-18 text-primary" >date_range</i>
                            </button>
                            <button class="btn btn-outline-secondary " type="button"   (click)="removeFltr(flt)" data-toggle="tooltip" title="Remove current filter item">
                                <i class="material-icons md-18 text-danger" >delete_forever</i>
                            </button>
                        </div>
                    </div>
                    <small class="text-danger" *ngIf="flt.fltrValue.invalid">{{getErrorMessage(flt.fltrValue)}}</small>
                </div>
            </div>
        </div>
    </div>
</div>
