<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="ts" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="CS82ANGULAR" #>
<#@ import namespace="CS82ANGULAR.Model" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable.Angular" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.DbContextSerializable" name="Context" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.Angular.AngularJson" name="AngularJsonFile" #>
<#@ include file="..\..\CommonScripts\ViewLevel.t4" #>
<#

    string FormControlNewModelPropName  = "eformNewControlModel";
    string OnAfterSubmitMethodName      = "onAfterSubmit";

    string deldlgCssFolder              = "01526-Ddlg.component.css";
    string deldlgHtmlFolder             = "01526-Ddlg.component.html";
    string deldlgComponentFolder        = "01526-Ddlg.component.ts";
    string componentSelectorCommonPart = GetComponentSelectorCommonPart(Model, deldlgComponentFolder);
    string componentClassName = GetComponentClassName(Model, deldlgComponentFolder);

    string viewInterfaceFolder          = "01100-.interface.ts";
    string viewInterfaceName            = GetInterfaceNameWithAnglr(AngularJsonFile, Model, viewInterfaceFolder, deldlgComponentFolder);

    string delformComponentFolder       = "01506-Dform.component.ts";
    string delformComponentClassName    = GetComponentClassNameWithAnglr(AngularJsonFile, Model,  delformComponentFolder, deldlgComponentFolder);

    string viewInterfaceDDlgFolder      = "01516-Ddlg.interface.ts";
    string viewInterfaceDDlgClassName   = GetInterfaceDDlgNameWithAnglr(AngularJsonFile, Model,  viewInterfaceDDlgFolder, deldlgComponentFolder);

#>

import { Component,  Input, Output, EventEmitter, ViewChild, Inject } from '@angular/core';
import {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';
import { <#= viewInterfaceDDlgClassName #> } from '<#= GetFolderNameWithAnglr(AngularJsonFile, Model, viewInterfaceDDlgFolder, deldlgComponentFolder)#>';
import { <#= delformComponentClassName #> } from '<#=  GetFolderNameWithAnglr(AngularJsonFile, Model, delformComponentFolder, deldlgComponentFolder) #>';
import { <#= viewInterfaceName #> } from '<#= GetFolderNameWithAnglr(AngularJsonFile, Model, viewInterfaceFolder, deldlgComponentFolder) #>';


@Component({
  selector: 'app-<#= componentSelectorCommonPart #>',
  templateUrl: '<#= GetFolderName(Model, deldlgHtmlFolder, deldlgComponentFolder) #>.html',
  styleUrls: ['<#= GetFolderName(Model, deldlgCssFolder, deldlgComponentFolder) #>.css']
})
export class <#= componentClassName #>  {
    @ViewChild(<#= delformComponentClassName #>) childForm: <#= delformComponentClassName #>|any;
    constructor(public dialogRef: MatDialogRef<<#= componentClassName #>>, @Inject(MAT_DIALOG_DATA) public data: <#= viewInterfaceDDlgClassName #> ) { }
    <#= OnAfterSubmitMethodName #>(newVal: <#= viewInterfaceName #>) {
        this.data.<#= FormControlNewModelPropName #> = newVal; 
        this.dialogRef.close(this.data);
    }
    onCancel() {
        this.dialogRef.close(null);
    }
    onOk() {
        if (typeof this.childForm === 'undefined') return;
        if (this.childForm === null) return;
        this.childForm.doSubmit();
    }
}

