<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="ts" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="CS82ANGULAR" #>
<#@ import namespace="CS82ANGULAR.Model" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable.Angular" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.DbContextSerializable" name="Context" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.Angular.AngularJson" name="AngularJsonFile" #>
<#@ include file="..\..\CommonScripts\ViewLevel.t4" #>
<#

    string viewModuleServiceFolder              = "01550-V.module.service.ts";
    string viewModuleServiceClassName           = GetModuleServiceClassName(Model, viewModuleServiceFolder);

    string viewModuleFolder                     = "01550-V.module.ts";
    string viewModuleClassName                  = GetModuleClassNameWithAnglr(AngularJsonFile, Model, viewModuleFolder, viewModuleServiceFolder);

    string appSettingServiceFolder              = "00015-app-glbl-settings.service.ts";
    string appSettingServiceClassName           = GetCommonServiceClassNameWithAnglr(AngularJsonFile, Model, Context, appSettingServiceFolder, viewModuleServiceFolder);


    string vdlgComponentFolder                  = "01520-Vdlg.component.ts";
    string viewDlgComponentClassName            = GetComponentClassNameWithAnglr(AngularJsonFile, Model, vdlgComponentFolder, viewModuleServiceFolder);
    string GetMethodPrefix                      = "get";
    string AppSettingServicePropName            = "appGlblSettings";

    string viewInterfaceDlgFolder               = "01510-Vdlg.interface.ts";
    string viewInterfaceDlgClassName            = GetInterfaceDlgNameWithAnglr(AngularJsonFile, Model, viewInterfaceDlgFolder, viewModuleServiceFolder);

#>

import { Injectable } from '@angular/core';
import { NgbModal } from '@ng-bootstrap/ng-bootstrap';
import { <#= appSettingServiceClassName #> } from '<#=  GetCommonFolderNameWithAnglr(AngularJsonFile, Model, Context,  appSettingServiceFolder, viewModuleServiceFolder)#>';
import { <#= viewInterfaceDlgClassName #> } from '<#= GetFolderNameWithAnglr(AngularJsonFile, Model, viewInterfaceDlgFolder, viewModuleServiceFolder)#>';

@Injectable({
  providedIn: 'root',
})
export class <#= viewModuleServiceClassName #> {
  constructor(private dialog: NgbModal, protected <#= AppSettingServicePropName #>: <#= appSettingServiceClassName #>) {}
  async open(data: <#= viewInterfaceDlgClassName #>): Promise<any> {
    let w: string = this.<#= AppSettingServicePropName #>.getDialogWidth('<#= Model.ViewName #>');
    const  <#= viewModuleClassName #> = (await import('<#= GetFolderNameWithAnglr(AngularJsonFile, Model, viewModuleFolder, viewModuleServiceFolder) #>')).<#= viewModuleClassName #>;
    let dialogRef = this.dialog.open(<#= viewModuleClassName #>.<#= GetMethodPrefix #><#=  viewDlgComponentClassName #>(), {size: w}); 
    dialogRef.componentInstance.data = data;
    return dialogRef.result;
  }  
}

