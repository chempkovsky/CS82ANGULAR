<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="html" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="CS82ANGULAR" #>
<#@ import namespace="CS82ANGULAR.Model" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.DbContextSerializable" name="Context" #>
<#@ include file="..\..\CommonScripts\ViewLevel.t4" #>
<#
    bool localize = Context.Localize;

    string HiddenFilterSelector         = "hidden-filter";
    string HiddenFilterPropName         = "hiddenFilter";
    string FormControlModelSelector     = "eform-control-model";
    string FormControlModelPropName     = "eformControlModel";
    string BeforeSubmitSelector         = "before-submit";
    string BeforeSubmitPropName         = "beforeSubmit";
    string AfterSubmitSelector          = "after-submit";
    string AfterSubmitPropName          = "afterSubmit";
    string OnAfterSubmitMethodName      = "onAfterSubmit";
    string TitlePropName                = "title";
    string AppearancePropName           = "appearance";
    string OutletNamePrefix             = "oltnm";
    string SelectedDetailPropName       = "selectedDetail";
    string DetailViewsPropName          = "detailViews";
    string OnDetailChangedMethodName    = "onDetailChanged";
    string ShowDetailsPropName          = "showDetails";
    string NavBackToMasterPropName      = "NavBackToMaster";
    string frasesPropName               = "frases";

    string captionPropName              = "caption";
    string captionSelector              = "caption";

    string containerMenuItemsPropName           = "contMenuItems";
    string containerMenuItemsSelector           = "cont-menu-items";
    string onContainerMenuItemClickMethodName   = "onContMenuItemClicked";
    string onContainerMenuItemClickSelector     = "on-cont-menu-item-click";
    string onContainerMenuItemClickEmitter      = "onContMenuItemEmitter";



    string vformComponentFolder         = "01500-Vform.component.ts";
    string componentSelectorCommonPart  = GetComponentSelectorCommonPart(Model, vformComponentFolder);
    string rvComponentFolder            = "01820-RV.component.ts";
    string rvcomponentClassName         = GetComponentClassName(Model, rvComponentFolder);

#>
<mat-card>
    <!-- <mat-card-subtitle>{{<#= TitlePropName #>}}</mat-card-subtitle> -->
    <mat-card-subtitle>
        <div fxLayout>
            <button mat-icon-button color="primary" (click)="onCancel()" fxFlex="19%" [matTooltip]="<#= frasesPropName #>['<#= NavBackToMasterPropName #>']"> 
                <mat-icon>arrow_back</mat-icon>
            </button>    
            <mat-form-field [appearance]="<#= AppearancePropName #>" fxFlex="79%" *ngIf="<#= ShowDetailsPropName #>">
                <mat-select (selectionChange)="<#= OnDetailChangedMethodName #>($event)" [value]="<#= SelectedDetailPropName #>">
                    <mat-option *ngFor="let v of  <#= DetailViewsPropName #>;" [value]="v">{{ v.caption }}</mat-option>
                </mat-select>
            </mat-form-field>
        </div>
    </mat-card-subtitle>


    <mat-card-content>
        <app-<#= componentSelectorCommonPart #> 
            [<#= captionSelector #>]="<#= TitlePropName #>" 
            [<#= HiddenFilterSelector #>]="<#= HiddenFilterPropName #>"
            [<#= FormControlModelSelector #>]="<#= FormControlModelPropName #>"
            (<#= AfterSubmitSelector #>)="<#= OnAfterSubmitMethodName #>($event)"
            [<#= containerMenuItemsSelector #>]="<#= containerMenuItemsPropName #>"
            (<#= onContainerMenuItemClickSelector #>)="<#= onContainerMenuItemClickMethodName #>($event)"
        ></app-<#= componentSelectorCommonPart #>>
    </mat-card-content>
    <!-- <mat-card-actions>
      <button mat-button (click)="onCancel()" cdkFocusInitial>Cancel</button>
      <button mat-button (click)="onOk()">Ok</button>
    </mat-card-actions> -->
</mat-card>
 <!-- <router-outlet name='<#=  OutletNamePrefix + Model.ViewName #>'></router-outlet>   -->
 <router-outlet></router-outlet>

