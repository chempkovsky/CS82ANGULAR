<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="ts" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="CS82ANGULAR" #>
<#@ import namespace="CS82ANGULAR.Model" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable.Angular" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.DbContextSerializable" name="Context" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.Angular.AngularJson" name="AngularJsonFile" #>
<#@ include file="..\..\CommonScripts\ViewLevel.t4" #>
<#

    string FormControlNewModelPropName  = "eformNewControlModel";
    string OnAfterSubmitMethodName      = "onAfterSubmit";

    string upddlgCssFolder              = "01524-Udlg.component.css";
    string upddlgHtmlFolder             = "01524-Udlg.component.html";
    string upddlgComponentFolder        = "01524-Udlg.component.ts";
    string componentSelectorCommonPart  = GetComponentSelectorCommonPart(Model, upddlgComponentFolder);
    string componentClassName           = GetComponentClassName(Model, upddlgComponentFolder);

    string viewInterfaceFolder          = "01100-.interface.ts";
    string viewInterfaceName            = GetInterfaceNameWithAnglr(AngularJsonFile, Model, viewInterfaceFolder, upddlgComponentFolder);

    string updformComponentFolder       = "01504-Uform.component.ts";
    string updformComponentClassName    = GetComponentClassNameWithAnglr(AngularJsonFile, Model,  updformComponentFolder, upddlgComponentFolder);

    string viewInterfaceUDlgFolder      = "01514-Udlg.interface.ts";
    string viewInterfaceUDlgClassName   = GetInterfaceUDlgNameWithAnglr(AngularJsonFile, Model,  viewInterfaceUDlgFolder, upddlgComponentFolder);


#>

import { Component,  Input, Output, EventEmitter, ViewChild, Inject } from '@angular/core';
import {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';
import { <#= viewInterfaceUDlgClassName #> } from '<#= GetFolderNameWithAnglr(AngularJsonFile, Model, viewInterfaceUDlgFolder, upddlgComponentFolder)#>';
import { <#= updformComponentClassName #> } from '<#=  GetFolderNameWithAnglr(AngularJsonFile, Model, updformComponentFolder, upddlgComponentFolder) #>';
import { <#= viewInterfaceName #> } from '<#= GetFolderNameWithAnglr(AngularJsonFile, Model, viewInterfaceFolder, upddlgComponentFolder) #>';

@Component({
  selector: 'app-<#= componentSelectorCommonPart #>',
  templateUrl: '<#= GetFolderName(Model, upddlgHtmlFolder, upddlgComponentFolder) #>.html',
  styleUrls: ['<#= GetFolderName(Model, upddlgCssFolder, upddlgComponentFolder) #>.css']
})
export class <#= componentClassName #>  {
    @ViewChild(<#= updformComponentClassName #>) childForm: <#= updformComponentClassName #>|any;
    constructor(public dialogRef: MatDialogRef<<#= componentClassName #>>, @Inject(MAT_DIALOG_DATA) public data: <#= viewInterfaceUDlgClassName #> ) { }
    <#= OnAfterSubmitMethodName #>(newVal: <#= viewInterfaceName #>) {
        this.data.<#= FormControlNewModelPropName #> = newVal; 
        this.dialogRef.close(this.data);
    }
    onCancel() {
        this.dialogRef.close(null);
    }
    onOk() {
        if (typeof this.childForm === 'undefined') return;
        if (this.childForm === null) return;
        this.childForm.doSubmit();
    }
}

