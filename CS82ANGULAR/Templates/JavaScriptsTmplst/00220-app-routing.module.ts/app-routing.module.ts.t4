<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="ts" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="CS82ANGULAR" #>
<#@ import namespace="CS82ANGULAR.Model" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable.Angular" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.DbContextSerializable" name="Context" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.Angular.AngularJson" name="AngularJsonFile" #>
<#@ include file="..\..\CommonScripts\ContextLevel.t4" #>
<#

    string appRoutingModuleFolder                   = "00220-app-routing.module.ts";
    string appRoutingModuleClassName                = GetModuleClassName(Model, appRoutingModuleFolder);    

    string securityModuleFolder                     = "00170-app-glbl-security.module.ts";
    string securityModuleClassName                  = GetModuleClassNameWithAnglr(AngularJsonFile, Model, securityModuleFolder, appRoutingModuleFolder);

    string pagenotfoundComponentFolder              = "00185-app-glbl-pagenotfound.component.ts";
    string pagenotfoundComponentClassName           = GetComponentClassNameWithAnglr(AngularJsonFile, Model, pagenotfoundComponentFolder, appRoutingModuleFolder);

    string homeComponentFolder                      = "00180-app-glbl-home.component.ts";
    string homeComponentClassName                   = GetComponentClassNameWithAnglr(AngularJsonFile, Model, homeComponentFolder, appRoutingModuleFolder);
#>

import { NgModule } from '@angular/core';
import { Routes, RouterModule } from '@angular/router';
<#
    if(! string.IsNullOrEmpty(homeComponentClassName)) {
#>
import { <#= homeComponentClassName #> } from '<#= GetFolderNameWithAnglr(AngularJsonFile, Model, homeComponentFolder, appRoutingModuleFolder)#>';
<#
    }
    if(! string.IsNullOrEmpty(pagenotfoundComponentClassName)) {
#>
import { <#= pagenotfoundComponentClassName #> } from '<#= GetFolderNameWithAnglr(AngularJsonFile, Model, pagenotfoundComponentFolder, appRoutingModuleFolder)#>';
<#
    }
#>

const routes: Routes = [
  // { path: 'authentication', loadChildren: () => import('<#= GetModuleFileName(Model, securityModuleFolder) #>').then(m => m.<#= securityModuleClassName #>) },  
  { path: 'authentication', <#= GenerateLoadChildrenImportWithAnglr(AngularJsonFile, Model, securityModuleFolder, appRoutingModuleFolder) #> },  

  

<#
    if(! string.IsNullOrEmpty(homeComponentClassName)) {
#>
  { path: 'home', component: <#= homeComponentClassName #> }, 
  { path: '',   redirectTo: '/home', pathMatch: 'full' }, 
  { path: '**', component: <#= homeComponentClassName #> },
<#
    }
    if(! string.IsNullOrEmpty(pagenotfoundComponentClassName)) {
#>
  { path: '**', component: <#= pagenotfoundComponentClassName #> },
<#
    }
#>

];


@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class <#= appRoutingModuleClassName #> { }

