<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="ts" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="CS82ANGULAR" #>
<#@ import namespace="CS82ANGULAR.Model" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable.Angular" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.DbContextSerializable" name="Context" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.Angular.AngularJson" name="AngularJsonFile" #>
<#@ include file="..\..\CommonScripts\ContextLevel.t4" #>
<#
    bool localize = Context.Localize;

    string columnSelectorItemInterfaceFolder    = "00032-column-selector-item.interface.ts";
    string columnSelectorComponentFolder        = "00033-column-selector.component.ts";
    string columnSelectorDlgCssComponentFolder  = "00035-column-selector-dlg.component.css";
    string columnSelectorDlgHtmlComponentFolder = "00035-column-selector-dlg.component.html";
    string columnSelectorDlgComponentFolder     = "00035-column-selector-dlg.component.ts";

    string componentSelectorCommonPart = GetComponentSelectorCommonPart(Model, columnSelectorDlgComponentFolder);
    string columnSelectorDlgComponentClassName  = GetComponentClassName(Model, columnSelectorDlgComponentFolder);

#>

import { Component, ViewChild, Inject  } from '@angular/core';
import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';

import { <#= GetModelClassNameWithAnglr(AngularJsonFile, Model, columnSelectorItemInterfaceFolder, columnSelectorDlgComponentFolder) #> } from '<#= GetFolderNameWithAnglr(AngularJsonFile, Model, columnSelectorItemInterfaceFolder, columnSelectorDlgComponentFolder)#>';
import { <#= GetComponentClassNameWithAnglr(AngularJsonFile, Model, columnSelectorComponentFolder, columnSelectorDlgComponentFolder) #> } from '<#= GetFolderNameWithAnglr(AngularJsonFile, Model, columnSelectorComponentFolder, columnSelectorDlgComponentFolder)#>';

@Component({
  selector: 'app-<#= componentSelectorCommonPart #>',
  templateUrl: '<#= GetFolderNameWithAnglr(AngularJsonFile, Model, columnSelectorDlgHtmlComponentFolder, columnSelectorDlgComponentFolder)#>.html',
  styleUrls: ['<#= GetFolderNameWithAnglr(AngularJsonFile, Model, columnSelectorDlgCssComponentFolder, columnSelectorDlgComponentFolder)#>.css']
})

export class <#= columnSelectorDlgComponentClassName #> { 
    @ViewChild(<#= GetComponentClassName(Model, columnSelectorComponentFolder) #>) childForm: <#= GetComponentClassName(Model, columnSelectorComponentFolder) #>|any;
    constructor(public dialogRef: MatDialogRef<<#= columnSelectorDlgComponentClassName #>>, @Inject(MAT_DIALOG_DATA) public data: Array<<#=  GetModelClassNameWithAnglr(AngularJsonFile, Model, columnSelectorItemInterfaceFolder, columnSelectorDlgComponentFolder) #>>) { }
    onCancel() {
        this.dialogRef.close(null);
    }
    onOk() {
        if (typeof this.childForm === 'undefined') return;
        if (this.childForm === null) return;
        let ind = this.childForm.colums.findIndex((e: { checked: boolean; }) => { return e.checked === true; })
        if(ind < 0) {
<# 
    if(localize) {
#>
            this.childForm.shwoError($localize`:No columns selected@@<#= columnSelectorDlgComponentClassName #>.No-columns-selected:No columns selected`);
<# 
    } else {
#>
            this.childForm.shwoError('No columns selected');
<# 
    }
#>
            return;
        }
        this.dialogRef.close(this.childForm.colums);
    }
}


