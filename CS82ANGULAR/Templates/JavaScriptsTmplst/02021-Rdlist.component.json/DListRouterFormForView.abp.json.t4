<#@ template language="C#" HostSpecific="True" Debug="True" #>
<#@ output extension="ts" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="CS82ANGULAR" #>
<#@ import namespace="CS82ANGULAR.Model" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable" #>
<#@ import namespace="CS82ANGULAR.Model.Serializable.Angular" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.ModelViewSerializable" name="Model" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.DbContextSerializable" name="Context" #>
<#@ parameter type="CS82ANGULAR.Model.Serializable.Angular.AngularJson" name="AngularJsonFile" #>
<#@ include file="..\..\CommonScripts\ViewLevel.t4" #>
<#
    bool localize = Context.Localize;

    string HiddenFilterPrefix           = "hf";
    string IdPrefix                     = "id";
    string ItemParamName                = "item";  
    string VPrefix                      = "View";
    string APrefix                      = "Add";
    string UPrefix                      = "Upd";
    string DPrefix                      = "Del";
    string DepthParamName               = "depth"; 
    string HiddenFilterAsFltRsltSuffix  = "HiddenFilterAsFltRslt";
    string HiddenFilterByRowSuffix      = "HiddenFilterByRow";
    string uidParamName                 = "uid"; 
    string RDLPrefix                    = "RDL";
    string routeFilterMaxHeightPropName = "fh";

    string NavPrefix                    = "np";
    string OutletNmPropName             = "outletNm";
    string IsDetailPropName             = "isdtl";
    string routeShowFilterPropName      = "sf";
    string routeDepthParamName          = "dp"; 
    string routeMaxHeightPropName       = "mh";
    string routeOutletNmPropName        = "oltn";


    string getStorageItemMethodName     = "getStorageItem";
    string setStorageItemMethodName     = "setStorageItem";
    string getStorageLengthMethodName   = "getStorageLength";
    string removeStorageItemMethodName  = "removeStorageItem";
    string getStorageKeyMethodName      = "getStorageKey";
    string clearStorageMethodName       = "getStorageKey";

    string GetOneMethodName             = "getone";
    string DeleteOneMethodName          = "deleteone";


    string ActionParamName              = "mode";  
    string ActionParamAddMode           = "add";
    string ActionParamUpdateMode        = "update";
    string ActionParamDeleteMode        = "delete";
    string ActionParamViewMode          = "view";
    string ActionParamDeleteSelMode     = "deletesel";
    string ActionParamNavM2mNotAllwd    = "nvm2mntallwd";
    string ViewNameParamName            = "view";
    string NavigationParamName          = "nav";
    string NavigationAddOnName          = "addon";
    string permissionPropName           = "permission";
    string accessDeniedPropName         = "accessdenied";

    // WebApi service's method names

    string CanAddSelector           = "can-add";
    string CanAddPropName           = "canAdd";
    string CanUpdSelector           = "can-update";
    string CanUpdPropName           = "canUpdate";
    string CanDelSelector           = "can-delete";
    string CanDelPropName           = "canDelete";
    string HiddenFilterSelector     = "hidden-filter";
    string HiddenFilterPropName     = "hiddenFilter";
    string ShowFilterSelector       = "show-filter";
    string ShowFilterPropName       = "showFilter";
    string applyFilterSelector      = "apply-filter";
    string applyFilterPropName      = "applyFilter";
    string ShowErrorMethodName      = "showError";


    string AppSettingServicePropName    = "appGlblSettings";
    string formRootService              = "frmRootSrv";
    string formServicePrefix            = "frmSrv";

    
    string RowCommandsSelector          = "row-commands";
    string RowCommandsPropName          = "rowCommands";
    string TableCommandsSelector        = "table-commands";
    string TableCommandsPropName        = "tableCommands";

    string OnRowCommandSelector         = "on-row-command";
    string OnRowCommandPropName         = "onRowCommand";
    string OnTableCommandSelector       = "on-table-command";
    string OnTableCommandPropName       = "onTableCommand";

    string externalFilterSelector               = "external-filter";
    string externalFilterPropName               = "externalFilter";
    string beforeSquerySelector                 = "before-squery";
    string beforeSqueryPropName                 = "beforeSquery";
    string OnBeforeSqueryMethodName             = "onBeforeSquery";

    string containerMenuItemsPropName           = "contMenuItems";
    string containerMenuItemsSelector           = "cont-menu-items";
    string onContainerMenuItemClickMethodName   = "onContMenuItemClicked";
    string onContainerMenuItemClickSelector     = "on-cont-menu-item-click";
    string onContainerMenuItemClickEmitter      = "onContMenuItemEmitter";

    string MaxHeightPropSelector        = "max-height";
    string MaxHeightPropName            = "maxHeight";
    string FilterMaxHeightPropSelector  = "filter-max-height";
    string FilterMaxHeightPropName      = "filterMaxHeight";


    string FormControlModelSelector     = "eform-control-model";
    string FormControlModelPropName     = "eformControlModel";
    string FormControlNewModelPropName  = "eformNewControlModel";
    string src2destMethodName           = "src2dest";

    string currentRowPropName        = "currentRow";
    string OnSelectRowMethodName     = "onSelectRow";
    string showMultiSelectPropName   = "ms";
    string frasesPropName            = "frases";

    string rdlistCssFolder                      = "02020-Rdlist.component.css";
    string rdlistHtmlFolder                     = "02020-Rdlist.component.html";
    string rdlistComponentFolder                = "02020-Rdlist.component.ts";
    string componentClassName                   = GetComponentClassName(Model, rdlistComponentFolder);
    string componentSelectorCommonPart          = GetComponentSelectorCommonPart(Model, rdlistComponentFolder);


    string appSettingServiceFolder              = "00015-app-glbl-settings.service.ts";
    string appSettingServiceClassName           = GetCommonServiceClassNameWithAnglr(AngularJsonFile, Model, Context, appSettingServiceFolder, rdlistComponentFolder);

    string eventEmitterDataModelFolder          = "00018-event-emitter-data.interface.ts";
    string eventEmitterDataModelClassName       = GetModelClassNameWithAnglr(AngularJsonFile, Model, Context, eventEmitterDataModelFolder, rdlistComponentFolder);

    string menuItemDataModelFolder              = "00017-menu-item-data.interface.ts";
    string menuItemDataModelClassName           = GetModelClassNameWithAnglr(AngularJsonFile, Model, Context, menuItemDataModelFolder, rdlistComponentFolder);

    string eventEmitterPubModelFolder           = "00019-event-emitter-pub.interface.ts";
    string eventEmitterPubModelClassName        = GetModelClassNameWithAnglr(AngularJsonFile, Model, Context, eventEmitterPubModelFolder, rdlistComponentFolder);

    string filterResultModelFolder              = "00024-web-service-filter-rslt.interface.ts";
    string filterResultModelClassName           = GetModelClassNameWithAnglr(AngularJsonFile, Model, Context, filterResultModelFolder, rdlistComponentFolder);

    string itemHeightDataModelFolder            = "00016-item-height-data.interface.ts";
    string itemHeightDataModelClassName         = GetModelClassNameWithAnglr(AngularJsonFile, Model, Context, itemHeightDataModelFolder, rdlistComponentFolder);

    string messageDialogInterfaceFolder         = "00037-message-dialog.interface.ts";
    string messageDialogInterfaceName           = GetModelClassNameWithAnglr(AngularJsonFile, Model, Context, messageDialogInterfaceFolder, rdlistComponentFolder);

    string messageDialogComponentFolder         = "00038-message-dialog.component.ts";
    string messageDialogComponentClassName      = GetContextComponentClassNameWithAnglr(AngularJsonFile, Model, Context, messageDialogComponentFolder, rdlistComponentFolder);


    string viewInterfaceFolder                  = "01100-.interface.ts";
    string viewInterfaceName                    = GetInterfaceNameWithAnglr(AngularJsonFile, Model, viewInterfaceFolder, rdlistComponentFolder);

    string viewServiceFolder                    = "01400-.service.ts";
    string serviceClassName                     = GetServiceClassNameWithAnglr(AngularJsonFile, Model, viewServiceFolder, rdlistComponentFolder);

    string sformComponentFolder                 = "01420-Sform.component.ts";
    string searchComponentClassName             = GetComponentClassNameWithAnglr(AngularJsonFile, Model, sformComponentFolder, rdlistComponentFolder);


    string viewInterfaceVDlgFolder              = "01510-Vdlg.interface.ts";
    string viewInterfaceVDlgClassName           = GetInterfaceVDlgNameWithAnglr(AngularJsonFile, Model,  viewInterfaceVDlgFolder, rdlistComponentFolder);

    string vdlgComponentFolder                  = "01520-Vdlg.component.ts";
    string vdlgComponentClassName               = GetComponentClassNameWithAnglr(AngularJsonFile, Model, vdlgComponentFolder, rdlistComponentFolder);
    string vModSrvFolder                        = "01550-V.module.service.ts";
    string vModSrvClassName                     = GetModuleServiceClassNameWithAnglr(AngularJsonFile, Model, vModSrvFolder, rdlistComponentFolder);

    string viewInterfaceADlgFolder              = "01512-Adlg.interface.ts";
    string viewInterfaceADlgClassName           = GetInterfaceADlgNameWithAnglr(AngularJsonFile, Model,  viewInterfaceADlgFolder, rdlistComponentFolder);

    string adlgComponentFolder                  = "01522-Adlg.component.ts";
    string adlgComponentClassName               = GetComponentClassNameWithAnglr(AngularJsonFile, Model, adlgComponentFolder, rdlistComponentFolder); 
    string aModSrvFolder                        = "01552-A.module.service.ts";
    string aModSrvClassName                     = GetModuleServiceClassNameWithAnglr(AngularJsonFile, Model, aModSrvFolder, rdlistComponentFolder);

    string viewInterfaceUDlgFolder              = "01514-Udlg.interface.ts";
    string viewInterfaceUDlgClassName           = GetInterfaceUDlgNameWithAnglr(AngularJsonFile, Model,  viewInterfaceUDlgFolder, rdlistComponentFolder);

    string udlgComponentFolder                  = "01524-Udlg.component.ts";
    string udlgComponentClassName               = GetComponentClassNameWithAnglr(AngularJsonFile, Model, udlgComponentFolder, rdlistComponentFolder); 
    string uModSrvFolder                        = "01554-U.module.service.ts";
    string uModSrvClassName                     = GetModuleServiceClassNameWithAnglr(AngularJsonFile, Model, uModSrvFolder, rdlistComponentFolder);

    string viewInterfaceDDlgFolder              = "01516-Ddlg.interface.ts";
    string viewInterfaceDDlgClassName           = GetInterfaceDDlgNameWithAnglr(AngularJsonFile, Model,  viewInterfaceDDlgFolder, rdlistComponentFolder);

    string ddlgComponentFolder                  = "01526-Ddlg.component.ts";
    string ddlgComponentClassName               = GetComponentClassNameWithAnglr(AngularJsonFile, Model, ddlgComponentFolder, rdlistComponentFolder); 
    string dModSrvFolder                        = "01556-D.module.service.ts";
    string dModSrvClassName                     = GetModuleServiceClassNameWithAnglr(AngularJsonFile, Model, dModSrvFolder, rdlistComponentFolder);


    string ActionColumnDefProperty      = "menuAction";
    string SelectColumnDefProperty      = "selectAction";
    string DisplayedColumnsProperty     = "displayedColumns";
    string MatPaginatorPageSize         = "10";
    string MatPaginatorPageSizeOptions  = "[10, 25, 50, 100]";

    List<ModelViewPropertyOfVwSerializable> primKeys= GetModelPrimaryKeyProps(Model);

    List<string> detailViewNames =  GetDetailViews(Model, Context, null);
    List<string> detailViewNamesToExclude = new List<string>(); // { "aspnetuserrolesView", "Bob", "Sam" };
    // m2mMdl, m2mFk, searchFks, otherFks, externalFks
    Tuple<ModelViewSerializable, ModelViewForeignKeySerializable, List<KeyValuePair<ModelViewForeignKeySerializable,int>>, List<KeyValuePair<ModelViewForeignKeySerializable,int>>, List<KeyValuePair<ModelViewForeignKeySerializable,int>>> tmpSearchSchema = null;
    // m2mMdl, m2mFk, searchFks, otherFks, externalFks
    List<Tuple<ModelViewSerializable, ModelViewForeignKeySerializable, List<KeyValuePair<ModelViewForeignKeySerializable,int>>, List<KeyValuePair<ModelViewForeignKeySerializable,int>>, List<KeyValuePair<ModelViewForeignKeySerializable,int>>>> searchSchemas =
        GetSearchResources(Model, Context);


    string OnBackBtnMethodName          = "onBackBtnMd";
    string OnBackBtnPropName            = "onBackBtn";
    string OnBackBtnSelector            = "on-back-btn";
    string showBackBtnPropName          = "showBackBtn";
    string showBackBtnSelector          = "show-back-btn";
    string captionPropName              = "caption";
    string captionSelector              = "caption";

    string showMultiSelectedRowSelector = "show-multi-selected-row";
    string showMultiSelectedRowPropName = "showMultiSelectedRow";
    string multiSelectedRowSelector     = "multi-selected-row";
    string multiSelectedRowPropName     = "multiSelectedRow";
    string onMultiSelectedRowPropName   = "onMultiSelectedRow";
    string currentMultiRowPropName      = "currentMultiRow";
    string DlOutletNamePrefix           = "dloltnm";
    string OnDetailChangedMethodName    = "onDetailChanged";
    string ToDetailMethodName           = "toDetail";
    string SelectedDetailPropName       = "selectedDetail";
    string DetailViewsPropName          = "detailViews";
    string ShowDetailsPropName          = "showDetails";
    string AppearancePropName           = "appearance";
    string selectedRowSelector          = "selected-row";
    string selectedRowPropName          = "selectedRow";

    string OutletNameValue = DlOutletNamePrefix + Model.ViewName;
    string DlgSrvPrefix                 = "dlgSrv";
    string apiName                      = AbpLastItemOfNameSpace(Model.WebApiServiceDefaultProjectNameSpace);


#>

    "RmCurrFltItm": "Удалить текущий элемент фильтра",
    "ShowDtDlg": "Показать диалог даты",
    "FltVal": "Значение фильтра",
    "Oprtr": "Оператор",
    "ClNm": "Имя столбца",
    "ApplFlt": "Применить фильтр",
    "RmvAllFltItms": "Удалить все элементы фильтра",
    "AddFltItm": "Добавить элемент фильтра",
    "NavBckToMstr": "Вернуться к мастеру",
    "VlMstLssTn": "Значение должно быть меньше чем",
    "VlMstGtTn": "Значение должно быть больше чем",
    "IncrctFt": "Неверный формат",
    "IncrctDtFt": "Неверный формат даты",
    "ClNmb": "Число столбцов",
    "Cancel": "Отмена",
    "Ok": "Ok",
    "NoClSel": "Столбцы не выбраны",

    "ErrorTxt": "Ошибка:",
    "ErrorTp": "Ошибка типа",
    "SttsTxt": "статус:",
    "SttsText": "Текст состояния:",
    "ErrorCd": "Код ошибки:",
    "ErrorDscr": "описание ошибки:",
    "ValidError": "Ошибка проверки.",
    "ReqMxLn": "Требуемая максимальная длина",
    "ReqMinLn": "Требуемая минимальная длина",
    "ReqFld": "Обязательное поле",

    "RfrshTbl": "Обновить таблицу",
    "TblClmns": "Столбцы таблицы",

    "EItm": "Изменить",
    "DItm": "Удалить",
    "VItm": "Просмотреть",
    "AItm": "Добавить",
    "SItm": "Выберите элемент",
    "DSel": "Удалить выбранные",
    "Prmssn": "Разрешение",
    "AccDen": "Доступ запрещен",

    "FullScan": "Любой фильтр",
    "FltNtAppl": "Не удалось применить фильтр, так как установлены не все атрибуты.",
    "NAllPrpsAreSet": "Не все свойства установлены",
    "NtAllMstSet": "Не все мастера установлены",
    "NabBckMstr": "Вернуться к мастеру",
    "HideDtls": "Скрыть детали",
    "Nvm2mntallwd": "Переход к подробной форме не разрешен в режиме Один ко многим.",

    "ShwTree": "Показать дерево",
    "ShwTbl": "Показать таблицу",
    "RdSbtms": "Перечитать вложенные",
    "SlctFls": "Выбрать файлы",
    "DwnLd": "Скачать файл"



    "RmCurrFltItm": "Remove current filter item",
    "ShowDtDlg": "Show date dialog",
    "FltVal": "Filter value",
    "Oprtr": "Operator",
    "ClNm": "Column name",
    "ApplFlt": "Apply filter",
    "RmvAllFltItms": "Remove all filter items",
    "AddFltItm": "Add filter item",
    "NavBckToMstr": "Navigate back to master",
    "VlMstLssTn": "The value must be less than",
    "VlMstGtTn": "The value must be greater than",
    "IncrctFt": "Icorrect format",
    "IncrctDtFt": "Icorrect date format",
    "ClNmb": "Number of columns",
    "Cancel": "Cancel",
    "Ok": "Ok",
    "NoClSel": "No columns selected",

    "ErrorTxt": "Error :",
    "ErrorTp": "Error of type",
    "SttsTxt": "status:",
    "SttsText": "Status Text:",
    "ErrorCd": "error code:",
    "ErrorDscr": "error descr:",
    "ValidError": "Validation Error.",
    "ReqMxLn": "Required max length",
    "ReqMinLn": "Required min length",
    "ReqFld": "Required field",

    "RfrshTbl": "Refresh table",
    "TblClmns": "Table columns",

    "EItm": "Modify Item",
    "DItm": "Delete Item",
    "VItm": "View Item",
    "AItm": "Add Item",
    "SItm": "Select Item",
    "DSel": "Delete Selected",
    "Prmssn": "Permission",
    "AccDen": "Access denied",

    "FullScan": "Full Scan",
    "FltNtAppl": "Could not apply filter as not all attributes are set",
    "NAllPrpsAreSet": "Not all properties are set",
    "NtAllMstSet": "Not all masters have been set",
    "NabBckMstr": "Navigate back to master",
    "HideDtls": "Hide details",
    "Nvm2mntallwd": "Navigating to detail form is not allowed in One-to-Many mode",

    "ShwTree": "Show Tree",
    "ShwTbl": "Show Table",
    "RdSbtms": "Read Subitems",
    "SlctFls": "Select files",
    "DwnLd": "Download file"





        "<#= apiName #>::<#= Model.ViewName #>:PluralTitle": "<#= Model.PluralTitle #>",

<#
        foreach(string detailViewName in detailViewNames) {
            if(detailViewNamesToExclude.Any(s => s == detailViewName)) continue;
            ModelViewSerializable detailView = GetViewByName(Context, detailViewName);
            List<ModelViewForeignKeySerializable> foreignKeys = GetDetailViewForeignKeys(Model, detailView, null);
            if (foreignKeys == null) continue;
            if (foreignKeys.Count < 1) continue;
            bool isM2m = false;
            if(IsTableMatchesIndex(detailView)) {
                if(AllPrimKeyPropsAreForeignKeysProps(detailView)) {
                    if(ForeignKeysOrderedInsidePrimKey(detailView)) {
                        isM2m = true;
                    }
                }
            }
            foreach(ModelViewForeignKeySerializable foreignKey in foreignKeys) {
                if(isM2m) {
                    // m2mMdl, m2mFk, searchFks, otherFks, externalFks
                    tmpSearchSchema = DetailViewAsM2mMdl(detailView, Context);
                    if (tmpSearchSchema != null) {
                        int  cnt = 0;
                        if(tmpSearchSchema.Item5 == null) continue;
                        if(tmpSearchSchema.Item5.Count != 1) continue;
                        if(tmpSearchSchema.Item4 != null) continue;
                        if(tmpSearchSchema.Item5[0].Key != foreignKey) continue;
                        ModelViewSerializable viewToNavigate = GetViewByName(Context, tmpSearchSchema.Item2.ViewName);
#>
        "<#= apiName #>::<#= Model.ViewName #>:<#= viewToNavigate.PluralTitle #>:<#= detailView.Title #>": "<#= viewToNavigate.PluralTitle #>(<#= detailView.Title #>)",
<#
                        continue;
                    }
                }
#>
        "<#= apiName #>::<#= Model.ViewName #>:<#= detailView.PluralTitle #>:<#= foreignKey.NavigationName #>": "<#= detailView.PluralTitle + "(" + foreignKey.NavigationName + ")" #>",
<#
            }
        }
#>

